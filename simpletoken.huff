// @notice - Simple ERC20 token written in Huff, a low level EVM programming language


// ================ STORAGE LOCATIONS ================ //
#define macro BALANCE_LOCATION = takes(0) returns(1) {
	0x00 // do not change!
}

#define macro OWNER_LOCATION = takes(0) returns(1) {
	0x01
}

#define macro TOTAL_SUPPLY_LOCATION = takes(0) returns(1) {
	0x02
}

#define macro ALLOWANCE_LOCATION = takes(0) returns(1) {
	0x03
}

// ================= EVENT SIGS & ADDR mask ============= //

#define macro ADDRESS_MASK = takes(1) returns(1) {
	0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff
	and
}

#define macro TRANSFER_EVENT_SIGNATURE = takes(0) returns(1) {
	0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF
}

#define macro APPROVAL_EVENT_SIGNATURE = takes(0) returns(1) {
	0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925
}


// ================= UTILS ================================== //

template <error_location>
#define macro UTILS__NOT_PAYABLE = takes(0) returns(0) {
	callvalue <error_location> jumpi
}

#define macro UTILS__ONLY_OWNER = takes(0) returns(0) {
	OWNER_LOCATION() sload caller eq is_owner jumpi
		0x00 0x00 revert
	is_owner:
}
